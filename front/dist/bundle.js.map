{"version":3,"sources":["webpack://front/./src/js/main.js","webpack://front/./src/js/http.service.js","webpack://front/./src/js/environment.js"],"names":["productHttpService","path","this","url","fetch","id","limit","category","data","method","body","JSON","stringify","headers","productsContainer","document","querySelector","cardsContainer","cardsDescriptionContainer","categoryContainer","createProductsCards","container","cardInner","forEach","title","image","price","innerHTML","createSelectedCard","description","visualDescriptionCard","visualCard","getLimit","then","response","json","addEventListener","event","target","closest","dataset","get","categoryName","getCategory","categoryContainerInner","selectedCard","delete","modal","modalOverlay","style","display","preventDefault","form","productUpdate","elements","value","update","clickModalOverlay","clickFormBody","btnCloseModal"],"mappings":"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","file":"bundle.js","sourcesContent":["// Imports files\r\nimport Http from './http.service.js'\r\nimport '../styles/styles.scss'\r\n\r\nlet productHttpService = new Http('/products/');\r\nlet productsContainer = document.querySelector(\".catalog\");\r\nlet cardsContainer = document.querySelector(\".catalog__cards\");\r\nlet cardsDescriptionContainer = document.querySelector(\".catalog__card-description\");\r\nlet categoryContainer = document.querySelector(\".catalog__category\");\r\n\r\nmain();\r\n\r\nfunction main() {\r\n    \r\n    productHttpService.getLimit(10).then(response => response.json())\r\n    .then(data => createProductsCards(data, cardsContainer));\r\n\r\n    productsContainer.addEventListener('click', (event) => {\r\n\r\n        let cardTitleClick = event.target.closest('.card__title');\r\n        if(cardTitleClick) {\r\n            const id = event.target.closest('.card').dataset.id;\r\n            productHttpService.get(id).then(response => response.json())\r\n            .then((data) => createSelectedCard(data, cardsDescriptionContainer));\r\n        }\r\n        \r\n        let btnCategoryClick = event.target.closest('.description-card__show-category');\r\n        if(btnCategoryClick) {\r\n            let categoryName = event.target.closest('.description-card__show-category').dataset.category;\r\n            productHttpService.getCategory(categoryName).then(response => response.json())\r\n            .then(data => {\r\n                let categoryContainerInner = `\r\n                <div class=\"catalog__category__title\">\r\n                <h2>Products of ${categoryName}</h2>\r\n                </div>\r\n                <div class=\"catalog__category__cards\"></div>\r\n                `\r\n                categoryContainer.innerHTML = categoryContainerInner;\r\n                let categoryCardsContainer = document.querySelector(\".catalog__category__cards\");\r\n                createProductsCards(data, categoryCardsContainer);\r\n            })\r\n        }\r\n\r\n        let selectedCard = event.target.closest('.selected-card');\r\n\r\n        let btnDeleteClick = event.target.closest('.description-card__delete');\r\n        if(btnDeleteClick) {\r\n            const id = selectedCard.dataset.id;\r\n            productHttpService.delete(id).then(() => cardsDescriptionContainer.innerHTML = '').then(() => {\r\n                productHttpService.getLimit(10).then(response => response.json())\r\n                .then(data => createProductsCards(data, cardsContainer));\r\n            });\r\n        }\r\n\r\n        const modal = document.querySelector('.modal');\r\n        const modalOverlay = document.querySelector('.modal__overlay');\r\n\r\n        let btnEditClick = event.target.closest('.description-card__edit');\r\n        if(btnEditClick) {\r\n            modal.style.display = \"block\"\r\n            modalOverlay.style.display = \"block\"\r\n        }\r\n\r\n        let btnSubmitClick = event.target.closest('._form-submit');\r\n        if(btnSubmitClick) {\r\n            event.preventDefault();\r\n            const form = document.querySelector(\"#form\");\r\n            const id = selectedCard.dataset.id;\r\n            modal.style.display = \"none\"\r\n            modalOverlay.style.display = \"none\"\r\n            let productUpdate = {\r\n                title: form.elements.title.value,\r\n                price: form.elements.price.value,\r\n                description: form.elements.description.value,\r\n                category: form.elements.category.value,\r\n                image: form.elements.image.value,\r\n            }\r\n            productHttpService.update(id, {...productUpdate}).then(response => response.json())\r\n            .then((data) => createSelectedCard(data,cardsDescriptionContainer)).then(() => {\r\n                productHttpService.getLimit(10).then(response => response.json())\r\n                .then(data => createProductsCards(data, cardsContainer));\r\n            });\r\n        }\r\n\r\n        let clickModalOverlay = event.target.closest('.modal__overlay');\r\n        let clickFormBody = event.target.closest('#form');\r\n        let btnCloseModal = event.target.closest('.close-modal')\r\n\r\n        if(clickModalOverlay && !clickFormBody || btnCloseModal) {\r\n            modal.style.display = \"none\"\r\n            modalOverlay.style.display = \"none\"\r\n        }\r\n    })\r\n}\r\n\r\nfunction createProductsCards(data, container) {\r\n    let cardInner = '';\r\n\r\n    data.forEach(({id,title,image,price}) => {\r\n\r\n        cardInner += `\r\n            <div class=\"catalog__cards__item\">\r\n                <div class=\"card\" data-id=\"${id}\">\r\n                <div class=\"card__title\">\r\n                    <span>${title}</span>\r\n                </div>\r\n                <div class=\"card__visual\">\r\n                    <img src=\"${image}\">\r\n                </div>\r\n                <div class=\"card__price\">\r\n                    <span>${price} $</span>\r\n                </div>\r\n                <button class=\"card__basket\">\r\n                    <span>add to basket</span>\r\n                </button>\r\n                </div>\r\n            </div>\r\n        `;\r\n    });\r\n\r\n    container.innerHTML = cardInner;\r\n}\r\n\r\nfunction createSelectedCard(data, container) {\r\n\r\n    let { id, title, price, description, category, image } = data;\r\n\r\n    let cardInner = `\r\n        <div class=\"selected-card\" data-id=\"${id}\">\r\n            <div class=\"selected-card__visual\">\r\n            </div>\r\n            <div class=\"description-card\">\r\n                <div class=\"description-card__title\">\r\n                    <span>${title}</span>\r\n                </div>\r\n                <div class=\"description-card__category\">\r\n                    <span>Category - ${category}</span>\r\n                </div>\r\n                <div class=\"description-card__text\">\r\n                    <p>${description}</p>\r\n                </div>\r\n                <div class=\"description-card__price\">\r\n                    <span>${price} $</span>\r\n                </div>\r\n                <div class=\"description-card__control\">\r\n                    <button class=\"description-card__basket\"><span>add to basket</span></button>\r\n                    <button class=\"description-card__show-category\" data-category=\"${category}\">\r\n                        <span>Show products ${category}</span>\r\n                    </button>\r\n                    <button class=\"description-card__delete\">\r\n                        <span>Delete</span>\r\n                    </button>\r\n                    <button class=\"description-card__edit\">\r\n                        <span>Edit</span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div class=\"modal\">\r\n                <div class=\"modal__overlay\"></div>\r\n                <div class=\"modal__body\">\r\n                    <form id='form'>\r\n                        <div class=\"close-modal\">&#10006</div>\r\n                        <label>\r\n                        <p>Title</p>\r\n                        <input name=\"title\" type=\"text\" value=\"${title}\">\r\n                        </label>\r\n                        <label>\r\n                        <p>Price</p>\r\n                        <input name=\"price\" type=\"text\" value=\"${price}\">\r\n                        </label>\r\n                        <label>\r\n                        <p>Description</p>\r\n                        <textarea name=\"description\">${description}</textarea>\r\n                        </label>\r\n                        <label>\r\n                        <p>Category</p>\r\n                        <input name=\"category\" type=\"text\" value=\"${category}\">\r\n                        </label>\r\n                        <label>\r\n                        <p>Image</p>\r\n                        <input name=\"image\" type=\"text\" value=\"${image}\">\r\n                        </label>\r\n                        <button class=\"_form-submit\"><span>Submit</span></button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    `;\r\n    container.innerHTML = cardInner;\r\n    let visualDescriptionCard = document.querySelector(`.selected-card__visual`);\r\n    let visualCard = document.querySelector(`[data-id=\"${id}\"] .card__visual`);\r\n    visualDescriptionCard.innerHTML = visualCard.innerHTML;\r\n}","import env from './environment';\r\n\r\nexport default class Http {\r\n    constructor(path) {\r\n        this.url = env.basePath + path;\r\n    }\r\n\r\n    getAll() {\r\n        return fetch(this.url);\r\n    }\r\n\r\n    get(id) {\r\n        return fetch(this.url + id)\r\n    }\r\n\r\n    getLimit(limit) {\r\n        return fetch(this.url + `?limit=${limit}`)\r\n    }\r\n\r\n    getCategory(category) {\r\n        return fetch(this.url + `category/${category}`)\r\n    }\r\n\r\n    add(data) {\r\n        return fetch(this.url, {\r\n            method: 'POST',\r\n            body: JSON.stringify(data),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n    }\r\n\r\n    update(id, data) {\r\n        return fetch(this.url + id, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(data),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n    }\r\n\r\n    delete(id) {\r\n        return fetch(this.url + id, {\r\n            method: 'DELETE'\r\n        })\r\n    }\r\n}","export default {\r\n    basePath: 'http://localhost:3000/api'\r\n} "],"sourceRoot":""}